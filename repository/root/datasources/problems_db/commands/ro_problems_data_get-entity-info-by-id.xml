<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE command SYSTEM "../../../../dtds/script-dao-commands.dtd">
<command name="ro.problems.data.get-entity-info-by-id" type="SQL.QUERY">
         <parameters>
                     <parameter name="entityId" />
                     <parameter name="subtypesList" />
                     <parameter name="userId" />
               </parameters>
      <script>
      WITH RECURSIVE subentities_list(id, complex_type_id, parent_entity_id, depth) AS (
        SELECT e.id, e.complex_entity_type_id, e.parent_entity_id, 0
        FROM entities e
        where e.parent_entity_id=$entityId
                
      UNION ALL
        SELECT e.id, e.complex_entity_type_id, e.parent_entity_id, eg.depth + 1
        FROM entities e, subentities_list eg
        WHERE eg.id = e.parent_entity_id
)
select e.id, e.title,e.content,e.insert_date,cet.complex_type 
,e.creator_id
,votes.pro_votes
,votes.opposed_votes	
,votes.total_votes
, case (votes.total_votes)
when 0 then 0
else (votes.pro_votes-votes.opposed_votes) 
end popularity_index
,ep.priority general_priority
,gs.status general_status
#if($userId)
,eu.vote user_vote
,eu.last_vote_update
,eu.priority
,eu.last_priority_update
,st.status
,eu.last_status_update
#end
#foreach( $entityContext in $subtypesList.getValues())
,(select count(*) from subentities_list where complex_type_id = $entityContext.getValue("id") and depth=0) $entityContext.getValue("simple_subtype")_subtype_count
,(select count(*) from subentities_list where complex_type_id = $entityContext.getValue("id")) $entityContext.getValue("simple_subtype")_recursive_subtype_count
#end	
, $subtypesList.size() subtypes_count
from entities e
left outer join (
select 
e2.id entity_id
,sum(case v.vote
	when 'y' then 1
	else 0
	end) pro_votes
,sum(case v.vote
	when 'n' then 1
	else 0
	end) opposed_votes
,count(v.vote) total_votes	
from entities e2
left outer join entities_users v on (e2.id = v.entity_id)
group by e2.id	
) votes on (e.id = votes.entity_id)
#if($userId)
left outer join entities_users eu on(e.id = eu.entity_id and eu.user_id=$userId)
left outer join statuses st on(eu.status_id=st.id)
#end
left outer join entities_priorities ep on (e.id=ep.entity_id)
left outer join entities_statuses es on (e.id=es.entity_id)
left outer join statuses gs on(es.status_id=gs.id)
inner join complex_entity_type cet on (e.complex_entity_type_id = cet.id)
where e.id=$entityId
group by e.id, e.title, e.content, e.insert_date, cet.complex_type,e.creator_id
,votes.pro_votes,votes.opposed_votes,votes.total_votes,ep.priority,gs.status
#if($userId)
,eu.vote,eu.last_vote_update,eu.priority,eu.last_priority_update
,st.status,eu.last_status_update
#end

   </script>
</command>